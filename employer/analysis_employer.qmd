---
title: "DS Jobs"
author: "Tina Tsou"
format: html
---

```{r setup, include = FALSE}
library(tidyverse)
library(tidytext)
library(pluralize)
library(ggridges)
library(SnowballC)
library(kableExtra)
df <- read_csv("listings2019_2021.csv")
```

```{r, cache = TRUE, message = FALSE, warning = FALSE}
#senior/ manager positions
df %>% 
  filter(grepl("senior|manager", jobTitle, ignore.case = TRUE)) %>% 
  select(jobTitle) %>% 
  count()
  
#grad program
df %>% 
  filter(grepl("graduate", jobTitle, ignore.case = TRUE)) %>% 
  select(jobTitle) %>% 
  count()
```


```{r, cache = TRUE, message = FALSE, warning = FALSE}
emp_word <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 
           'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(word, mobileAdTemplate) %>% 
  subset(!grepl("[0-9]", word)) %>% #remove words with numbers
  anti_join(stop_words,by = "word") %>% 
  mutate(stem = wordStem(word, language = "english")) %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType, word) %>% 
  distinct(stem) %>% 
  ungroup() 


emp_word %>%
  count(word, sort = TRUE) %>% 
  filter(n>1000) %>% 
  ggplot(aes(x = n,y= fct_reorder(word, n)))+
  geom_col()+
  labs(title = " Stemmed word Count", y = "Words", x= "Count")+
  theme_minimal()

```

```{r}
lda_model10_comp <- readRDS("lda_model10_comp.rda")

topics_comp <- tidy(lda_model10_comp, matrix = "beta")

emp_word_comp <- emp_word %>% 
  left_join(topics_comp, by = c("stem" = "term") ) %>% 
  group_by(jobTitle, jobClassification, advertiserName, workType,word, stem) %>% 
  top_n(1, beta) %>% 
  mutate(topic = as.factor(recode(topic, 
                         '1' = "I",
                         '2' = "II",
                         '3' = "III",
                         '4' = "IV",
                         '5' = "V",
                         '6' = "VI",
                         '7' = "VII",
                         '8' = "VIII",
                         '9' = "IX",
                         '10' = "X")))

#write.csv(emp_word_comp, file = "../presentation/data/emp_comp.csv")

emp_word_comp %>% 
#  distinct(jobTitle, jobClassification, topic) %>% 
  group_by(jobClassification) %>% 
  count(topic, sort = TRUE) %>% 
  ungroup() %>% 
  filter(n> 600) %>% 
  mutate(topic = fct_reorder(topic, n, sum))%>% #reorder_within(topic, n, School)
  ggplot(aes(x = n,
             y = topic,
             fill = topic))+
  geom_col() +
  scale_fill_brewer(palette = "Paired") +
  theme_minimal() +
  #scale_y_reordered() +
  facet_wrap(~jobClassification, scales = "free_y") +
  theme(legend.position = "none") +
  labs(title = "Job Classification Topic Count - LDA_COMP")

```


```{r}
emp_word_comp  %>% 
  count(topic, sort = TRUE) %>% 
  ungroup() %>% 
  mutate(topic = fct_reorder(topic, n, sum))%>% 
  ggplot(aes(x = n,
             y = topic,
             fill = topic))+
  geom_col() +
  scale_fill_brewer(palette = "Paired") +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(title = "Topic Count - LDA_COMP")
```


```{r}
emp_topics <- topicmodels::get_terms(lda_model10_comp, k = 10)%>% 
  as_tibble() %>% 
  rename("Topic I" = "Topic 1",
         "Topic II" = "Topic 2",
         "Topic III" = "Topic 3",
         "Topic IV" = "Topic 4",
         "Topic V" = "Topic 5",
         "Topic VI" = "Topic 6",
         "Topic VII" = "Topic 7",
         "Topic VIII" = "Topic 8",
         "Topic IX" = "Topic 9",
         "Topic X" = "Topic 10")

#write.csv(emp_topics, file = "../presentation/data/emp_topics.csv")
```


```{r}
bigram <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(bigram, mobileAdTemplate, token = "ngrams",n=2) %>% 
  separate(bigram, c("word1", "word2") , sep = " ") %>% 
  filter(!word1 %in% stop_words$word & !word2 %in% stop_words$word ) %>% 
  mutate(bigram = paste(word1, word2)) %>% 
  #mutate(bigram = singularize(bigram)) %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType) %>% 
  distinct(bigram) %>% 
  ungroup() 

bigram %>%
  count(bigram, sort = TRUE) %>% 
  filter(n>200) %>% 
  ggplot(aes(x = n,y= fct_reorder(bigram, n)))+
  geom_col()

```


```{r}
trigram <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(trigram, mobileAdTemplate, token = "ngrams",n=3) %>% 
  separate(trigram, c("word1", "word2", "word3") , sep = " ") %>% 
  filter(!word1 %in% stop_words$word & !word2 %in% stop_words$word & !word3 %in% stop_words$word) %>% 
  mutate(trigram = paste(word1, word2,word3)) %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType) %>% 
  distinct(trigram) %>% 
  ungroup() 

trigram %>%
  count(trigram, sort = TRUE) %>% 
  filter(n>100) %>% 
  ggplot(aes(x = n,y= fct_reorder(trigram, n)))+
  geom_col()

```
```{r}
df %>% select(c(25:49)) %>% 
  pivot_longer(everything(),
               names_to = "Program", 
               values_to = "sum") %>% 
  group_by(Program) %>% 
  summarise(sum = sum(sum)) %>%
  arrange(-sum) %>% 
  ggplot(aes(y = fct_reorder(Program, sum), x= sum))+geom_col()
```

```{r}
# breakdown of job titles
scientist <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle, "scientist"),
         !str_detect(jobTitle, "analyst"))%>% 
  rename("scientist" = jobTitle)

analyst <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle,"analyst"),
         !str_detect(jobTitle, "scientist"))%>% 
  rename("analyst" = jobTitle)

both <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle, "scientist"),
         str_detect(jobTitle, "analyst")) %>% 
  rename("both" = jobTitle)


VennDiagram::venn.diagram()
  
```

```{r languages}
df %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")
```

```{r languages for ds}
df %>% 
  filter(tolower(jobTitle) %in% scientist$scientist) %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")+ 
  labs( title = "Languages for Data Science Jobs",
        y = "Languages")
```
```{r languages for analyst}
df %>% 
  filter(tolower(jobTitle) %in% analyst$analyst) %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")+ 
  labs( title = "Languages for Analyst Jobs",
        y = "Languages")
```
```{r university}
df %>% 
  filter(grepl("education|university|college", advertiserName, ignore.case = TRUE)) %>% 
  select(advertiserName) %>% 
  unique() %>% rename("University" = advertiserName) %>% 
  kable(escape = F) %>%
  kable_paper("striped", full_width = F) %>% 
  row_spec(c(1:3,7,10,12,17),bold = T, color = "white", background = "#006DAE")
```
```{r go8employers}
unijob <- df %>% 
  filter(advertiserName %in% c("The Australian National University", "University of New South Wales","The University of Sydney", "The University of Queensland", "The University Of Melbourne"," Federation University Australia", "University of Queensland")) 

unijob %>% 
   pivot_longer(cols = c(25:49),
                names_to = "language",
                values_to = "count") %>% 
  group_by(advertiserName, language)%>% 
  mutate(advertiserName = ifelse(advertiserName == "University of Queensland", "The University of Queensland",
                                 advertiserName)) %>% 
  summarise(count =sum(count)) %>% 
  ggplot(aes(x = count, y = language))+
  geom_col()+
  facet_wrap(~advertiserName, scales = "free_y")+theme_minimal()
```


# Salary
```{r}
#code from emi's analysis
out <- df %>% 
  mutate(salary = map_dbl(salary_string, ~{
    out <- str_extract_all(.x, "[0-9]+,?[0-9]+[kK.%]?") %>% 
      str_replace("[,+]", "") %>% 
      str_replace("[kK]", "000")
    out <- out[!out %in% "00"]
    out <- out[!str_detect(out, "[.%]")]
    if(length(out)==0) return(NA_real_)
    x <- mean(as.numeric(out))
    if(!is.na(.x) && any(str_detect(.x, "(day|pd)"))) return(x * 48 * 5)
    return(x)
  })) 
```

```{r}
out %>% 
  select(salary, R:Fortran) %>% 
  pivot_longer(R:Fortran, 
               names_to = "language",
               values_to = "count") %>% 
  filter(count == 1) %>% 
  select(language, salary) %>% 
  filter(!is.na(salary)) %>% 
  ggplot(aes(x = salary, y = language, fill = ..x..))+
  geom_density_ridges_gradient(size =0.1, scale = 1)+
  paletteer::scale_fill_paletteer_c("viridis::plasma")+
  scale_x_continuous(labels = scales::dollar)+
  theme_ridges()+labs(title = "Salary distribution for Languages")+
  theme(legend.position = "none")
```

### Salary
```{r job_salary, echo = FALSE}
library(priceR)

Salary <- jobs$salary_string %>% 
  extract_salary(
    include_periodicity = TRUE,
    working_weeks_per_year = 48 
    ) %>% 
  cbind(jobs, .)

Salary %>% 
  select(jobClassification, salary) %>% 
  filter(!is.na(salary) &salary < 1000000) %>%
  ggplot(aes(x = salary,
             y = jobClassification,
             color =..x..))+
  geom_point()+
 paletteer::scale_color_paletteer_c("viridis::plasma")+
  scale_x_continuous(labels = scales::dollar)+
  theme_minimal()+labs(title = "Salary distribution for Languages")+
  theme(legend.position = "none")
```

