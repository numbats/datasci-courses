---
title: "DS Job Salary"
author: "Tina Tsou"
format: html
---

```{r setup, include = FALSE}
library(tidyverse)
library(tidytext)
library(pluralize)
library(kableExtra)
df <- read_csv("listings2019_2021.csv")
```

```{r, cache = TRUE, message = FALSE, warning = FALSE}
glimpse(df)

unnested <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(word, mobileAdTemplate) %>% 
  anti_join(stop_words,by = "word") %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType) %>% 
  distinct(word) %>% 
  ungroup() 

unnested %>%
  count(word, sort = TRUE) %>% 
  filter(n>800) %>% 
  ggplot(aes(x = n,y= fct_reorder(word, n)))+
  geom_col()

```

```{r}
bigram <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(bigram, mobileAdTemplate, token = "ngrams",n=2) %>% 
  separate(bigram, c("word1", "word2") , sep = " ") %>% 
  filter(!word1 %in% stop_words$word & !word2 %in% stop_words$word ) %>% 
  mutate(bigram = paste(word1, word2)) %>% 
  #mutate(bigram = singularize(bigram)) %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType) %>% 
  distinct(bigram) %>% 
  ungroup() 

bigram %>%
  count(bigram, sort = TRUE) %>% 
  filter(n>200) %>% 
  ggplot(aes(x = n,y= fct_reorder(bigram, n)))+
  geom_col()

```


```{r}
trigram <- df %>%
  select(c('jobId', 'jobTitle', 'jobClassification', 'advertiserName', 'workType', 'mobileAdTemplate')) %>% 
  unnest_tokens(trigram, mobileAdTemplate, token = "ngrams",n=3) %>% 
  separate(trigram, c("word1", "word2", "word3") , sep = " ") %>% 
  filter(!word1 %in% stop_words$word & !word2 %in% stop_words$word & !word3 %in% stop_words$word) %>% 
  mutate(trigram = paste(word1, word2,word3)) %>% 
  group_by(jobId, jobTitle, jobClassification, advertiserName, workType) %>% 
  distinct(trigram) %>% 
  ungroup() 

trigram %>%
  count(trigram, sort = TRUE) %>% 
  filter(n>100) %>% 
  ggplot(aes(x = n,y= fct_reorder(trigram, n)))+
  geom_col()

```
```{r}
df %>% select(c(25:49)) %>% 
  pivot_longer(everything(),
               names_to = "Program", 
               values_to = "sum") %>% 
  group_by(Program) %>% 
  summarise(sum = sum(sum)) %>%
  arrange(-sum) %>% 
  ggplot(aes(y = fct_reorder(Program, sum), x= sum))+geom_col()
```

```{r}
# breakdown of job titles
scientist <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle, "scientist"),
         !str_detect(jobTitle, "analyst"))

analyst <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle,"analyst"),
         !str_detect(jobTitle, "scientist"))

both <- df %>% 
  select(jobTitle) %>% 
  mutate(jobTitle = tolower(jobTitle)) %>% 
  filter(str_detect(jobTitle, "scientist"),
         str_detect(jobTitle, "analyst"))

both <- inner_join(scientist, analyst)

```

```{r languages}
df %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")
```

```{r languages for ds}
df %>% 
  filter(tolower(jobTitle) %in% scientist$jobTitle) %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")+ 
  labs( title = "Languages for Data Science Jobs",
        y = "Languages")
```
```{r languages for analyst}
df %>% 
  filter(tolower(jobTitle) %in% analyst$jobTitle) %>% 
   select(c(25:49)) %>% 
   pivot_longer(cols = everything(),
                names_to = "language",
                values_to = "count") %>% 
   group_by(language) %>% 
   summarise(count =sum(count)) %>% 
   arrange(-count) %>% 
   ggplot(aes(x = count, fct_reorder(language, count), fill = language))+
   geom_col() +theme_minimal()+theme(legend.position = "none")+ 
  labs( title = "Languages for Analyst Jobs",
        y = "Languages")
```
```{r university}
df %>% 
  filter(grepl("education|university|college", advertiserName, ignore.case = TRUE)) %>% 
  select(advertiserName) %>% 
  unique() %>% rename("University" = advertiserName) %>% 
  kable(escape = F) %>%
  kable_paper("striped", full_width = F) %>% 
  row_spec(c(1:3,7,10,11,17),bold = T, color = "white", background = "#006DAE")
```
```{r go8employers}
unijob <- df %>% 
  filter(advertiserName %in% c("The Australian National University", "University of New South Wales","The University of Sydney", "The University of Queensland", "The University Of Melbourne"," Federation University Australia", "University of Queensland")) 

unijob %>% 
   pivot_longer(cols = c(25:49),
                names_to = "language",
                values_to = "count") %>% 
  group_by(advertiserName, language)%>% 
  mutate(advertiserName = ifelse(advertiserName == "University of Queensland", "The University of Queensland",
                                 advertiserName)) %>% 
  summarise(count =sum(count)) %>% 
  ggplot(aes(x = count, y = language))+
  geom_col()+
  facet_wrap(~advertiserName, scales = "free_y")+theme_minimal()
```

```{r}

```

